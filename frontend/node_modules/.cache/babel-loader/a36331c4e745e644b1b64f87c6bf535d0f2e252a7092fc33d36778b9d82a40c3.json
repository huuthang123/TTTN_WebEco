{"ast":null,"code":"var _jsxFileName = \"D:\\\\N\\u0103m 4 K\\xEC 2\\\\Ph\\xE1t tri\\u1EC3n h\\u1EC7 th\\u1ED1ng th\\u01B0\\u01A1ng m\\u1EA1i \\u0111i\\u1EC7n t\\u1EED\\\\ecommerce-app\\\\frontend\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    if (user) {\n      fetchCartFromServer(user.id);\n    } else {\n      loadCartFromLocalStorage();\n    }\n  }, [user]);\n  useEffect(() => {\n    if (!user) {\n      saveCartToLocalStorage();\n    }\n  }, [cartItems, user]);\n  const loadCartFromLocalStorage = () => {\n    try {\n      const savedCart = localStorage.getItem('cartItems');\n      setCartItems(savedCart ? JSON.parse(savedCart) : []);\n    } catch (error) {\n      console.error(\"Lỗi khi lấy giỏ hàng từ localStorage:\", error);\n      setCartItems([]);\n    }\n  };\n  const saveCartToLocalStorage = () => {\n    localStorage.setItem('cartItems', JSON.stringify(cartItems));\n  };\n  const fetchCartFromServer = async userId => {\n    try {\n      const res = await fetch(`http://localhost:5000/cart/${userId}`);\n      const data = await res.json();\n      setCartItems(data.items || []);\n    } catch (error) {\n      console.error(\"Lỗi khi lấy giỏ hàng từ server:\", error);\n    }\n  };\n  const addToCart = async item => {\n    if (user) {\n      try {\n        const res = await fetch(\"http://localhost:5000/cart/add\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            userId: user.id,\n            ...item\n          })\n        });\n        if (res.ok) {\n          fetchCartFromServer(user.id);\n        }\n      } catch (error) {\n        console.error(\"Lỗi khi thêm vào giỏ hàng:\", error);\n      }\n    } else {\n      setCartItems(prev => {\n        const updatedCart = [...prev, {\n          ...item,\n          selected: true\n        }];\n        saveCartToLocalStorage();\n        return updatedCart;\n      });\n    }\n  };\n  const removeFromCart = async (productId, size) => {\n    if (user) {\n      try {\n        await fetch(\"http://localhost:5000/cart/remove\", {\n          method: \"DELETE\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            userId: user.id,\n            productId,\n            size\n          })\n        });\n        fetchCartFromServer(user.id);\n      } catch (error) {\n        console.error(\"Lỗi khi xóa sản phẩm:\", error);\n      }\n    } else {\n      setCartItems(prev => prev.filter(item => !(item.productId === productId && item.size === size)));\n      saveCartToLocalStorage();\n    }\n  };\n  const increaseQuantity = async (productId, size) => {\n    if (user) {\n      await fetch(\"http://localhost:5000/cart/increase\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userId: user.id,\n          productId,\n          size\n        })\n      });\n      fetchCartFromServer(user.id);\n    } else {\n      setCartItems(prev => prev.map(item => item.productId === productId && item.size === size ? {\n        ...item,\n        quantity: item.quantity + 1\n      } : item));\n      saveCartToLocalStorage();\n    }\n  };\n  const decreaseQuantity = async (productId, size) => {\n    if (user) {\n      await fetch(\"http://localhost:5000/cart/decrease\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userId: user.id,\n          productId,\n          size\n        })\n      });\n      fetchCartFromServer(user.id);\n    } else {\n      setCartItems(prev => prev.map(item => item.productId === productId && item.size === size && item.quantity > 1 ? {\n        ...item,\n        quantity: item.quantity - 1\n      } : item));\n      saveCartToLocalStorage();\n    }\n  };\n  const totalItems = cartItems.reduce((sum, item) => sum + item.quantity, 0);\n  const total = cartItems.reduce((sum, item) => item.selected ? sum + item.price * item.quantity : sum, 0);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      setCartItems,\n      addToCart,\n      removeFromCart,\n      isOpen,\n      toggleCart,\n      total,\n      totalItems,\n      increaseQuantity,\n      decreaseQuantity,\n      toggleItemSelection: () => {},\n      selectAll: () => {},\n      deselectAll: () => {},\n      fetchCartFromServer,\n      loadCartFromLocalStorage,\n      saveCartToLocalStorage\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n};\n_s(CartProvider, \"X7YI3BfHaStyIX+y47+GKdUeVPE=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cartItems","setCartItems","isOpen","setIsOpen","user","setUser","fetchCartFromServer","id","loadCartFromLocalStorage","saveCartToLocalStorage","savedCart","localStorage","getItem","JSON","parse","error","console","setItem","stringify","userId","res","fetch","data","json","items","addToCart","item","method","headers","body","ok","prev","updatedCart","selected","removeFromCart","productId","size","filter","increaseQuantity","map","quantity","decreaseQuantity","totalItems","reduce","sum","total","price","Provider","value","toggleCart","toggleItemSelection","selectAll","deselectAll","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["D:/Năm 4 Kì 2/Phát triển hệ thống thương mại điện tử/ecommerce-app/frontend/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport const CartProvider = ({ children }) => {\r\n    const [cartItems, setCartItems] = useState([]);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [user, setUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            fetchCartFromServer(user.id);\r\n        } else {\r\n            loadCartFromLocalStorage();\r\n        }\r\n    }, [user]);\r\n\r\n    useEffect(() => {\r\n        if (!user) {\r\n            saveCartToLocalStorage();\r\n        }\r\n    }, [cartItems, user]);\r\n\r\n    const loadCartFromLocalStorage = () => {\r\n        try {\r\n            const savedCart = localStorage.getItem('cartItems');\r\n            setCartItems(savedCart ? JSON.parse(savedCart) : []);\r\n        } catch (error) {\r\n            console.error(\"Lỗi khi lấy giỏ hàng từ localStorage:\", error);\r\n            setCartItems([]);\r\n        }\r\n    };\r\n\r\n    const saveCartToLocalStorage = () => {\r\n        localStorage.setItem('cartItems', JSON.stringify(cartItems));\r\n    };\r\n\r\n    const fetchCartFromServer = async (userId) => {\r\n        try {\r\n            const res = await fetch(`http://localhost:5000/cart/${userId}`);\r\n            const data = await res.json();\r\n            setCartItems(data.items || []);\r\n        } catch (error) {\r\n            console.error(\"Lỗi khi lấy giỏ hàng từ server:\", error);\r\n        }\r\n    };\r\n\r\n    const addToCart = async (item) => {\r\n        if (user) {\r\n            try {\r\n                const res = await fetch(\"http://localhost:5000/cart/add\", {\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify({ userId: user.id, ...item })\r\n                });\r\n                if (res.ok) {\r\n                    fetchCartFromServer(user.id);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Lỗi khi thêm vào giỏ hàng:\", error);\r\n            }\r\n        } else {\r\n            setCartItems(prev => {\r\n                const updatedCart = [...prev, { ...item, selected: true }];\r\n                saveCartToLocalStorage();\r\n                return updatedCart;\r\n            });\r\n        }\r\n    };\r\n\r\n    const removeFromCart = async (productId, size) => {\r\n        if (user) {\r\n            try {\r\n                await fetch(\"http://localhost:5000/cart/remove\", {\r\n                    method: \"DELETE\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify({ userId: user.id, productId, size })\r\n                });\r\n                fetchCartFromServer(user.id);\r\n            } catch (error) {\r\n                console.error(\"Lỗi khi xóa sản phẩm:\", error);\r\n            }\r\n        } else {\r\n            setCartItems(prev => prev.filter(item => !(item.productId === productId && item.size === size)));\r\n            saveCartToLocalStorage();\r\n        }\r\n    };\r\n\r\n    const increaseQuantity = async (productId, size) => {\r\n        if (user) {\r\n            await fetch(\"http://localhost:5000/cart/increase\", {\r\n                method: \"PUT\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({ userId: user.id, productId, size })\r\n            });\r\n            fetchCartFromServer(user.id);\r\n        } else {\r\n            setCartItems(prev => prev.map(item => \r\n                item.productId === productId && item.size === size ? { ...item, quantity: item.quantity + 1 } : item\r\n            ));\r\n            saveCartToLocalStorage();\r\n        }\r\n    };\r\n\r\n    const decreaseQuantity = async (productId, size) => {\r\n        if (user) {\r\n            await fetch(\"http://localhost:5000/cart/decrease\", {\r\n                method: \"PUT\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({ userId: user.id, productId, size })\r\n            });\r\n            fetchCartFromServer(user.id);\r\n        } else {\r\n            setCartItems(prev => prev.map(item => \r\n                item.productId === productId && item.size === size && item.quantity > 1 ? { ...item, quantity: item.quantity - 1 } : item\r\n            ));\r\n            saveCartToLocalStorage();\r\n        }\r\n    };\r\n\r\n    const totalItems = cartItems.reduce((sum, item) => sum + item.quantity, 0);\r\n    const total = cartItems.reduce((sum, item) => (item.selected ? sum + item.price * item.quantity : sum), 0);\r\n\r\n    return (\r\n        <CartContext.Provider\r\n            value={{\r\n                cartItems,\r\n                setCartItems,\r\n                addToCart,\r\n                removeFromCart,\r\n                isOpen,\r\n                toggleCart,\r\n                total,\r\n                totalItems,\r\n                increaseQuantity,\r\n                decreaseQuantity,\r\n                toggleItemSelection: () => {},\r\n                selectAll: () => {},\r\n                deselectAll: () => {},\r\n                fetchCartFromServer,\r\n                loadCartFromLocalStorage,\r\n                saveCartToLocalStorage\r\n            }}\r\n        >\r\n            {children}\r\n        </CartContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useCart = () => useContext(CartContext);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}