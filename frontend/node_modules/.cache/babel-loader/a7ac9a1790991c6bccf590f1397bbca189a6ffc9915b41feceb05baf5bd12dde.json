{"ast":null,"code":"// services/AddressService.js\nimport axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/addresses';\nconst AddressService = {\n  getAddresses: async token => {\n    if (!token || typeof token !== 'string' || token.trim() === '') {\n      throw new Error('Token không tồn tại hoặc không hợp lệ. Vui lòng đăng nhập lại.');\n    }\n    try {\n      console.log('Gửi yêu cầu tới:', API_URL, 'với token:', token); // Debug\n      const response = await axios.get(API_URL, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log('Danh sách địa chỉ từ server:', response.data); // Debug\n      return response.data;\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data;\n      console.error('Lỗi từ server khi lấy địa chỉ:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Không thể tải danh sách địa chỉ');\n    }\n  },\n  addAddress: async (address, token) => {\n    if (!token || typeof token !== 'string' || token.trim() === '') {\n      throw new Error('Token không tồn tại hoặc không hợp lệ. Vui lòng đăng nhập lại.');\n    }\n    try {\n      const response = await axios.post(API_URL, address, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data.address;\n    } catch (error) {\n      var _error$response3, _error$response4, _error$response4$data;\n      console.error('Lỗi từ server khi thêm địa chỉ:', ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n      throw new Error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Không thể thêm địa chỉ');\n    }\n  },\n  updateAddress: async (id, updatedAddress, token) => {\n    if (!token || typeof token !== 'string' || token.trim() === '') {\n      throw new Error('Token không tồn tại hoặc không hợp lệ. Vui lòng đăng nhập lại.');\n    }\n    try {\n      const response = await axios.put(`${API_URL}/${id}`, updatedAddress, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data.address;\n    } catch (error) {\n      var _error$response5, _error$response6, _error$response6$data;\n      console.error('Lỗi từ server khi cập nhật địa chỉ:', ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n      throw new Error(((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || 'Không thể cập nhật địa chỉ');\n    }\n  },\n  deleteAddress: async (id, token) => {\n    if (!token || typeof token !== 'string' || token.trim() === '') {\n      throw new Error('Token không tồn tại hoặc không hợp lệ. Vui lòng đăng nhập lại.');\n    }\n    try {\n      await axios.delete(`${API_URL}/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const updatedAddresses = await AddressService.getAddresses(token);\n      return updatedAddresses;\n    } catch (error) {\n      var _error$response7, _error$response8, _error$response8$data;\n      console.error('Lỗi từ server khi xóa địa chỉ:', ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || error.message);\n      throw new Error(((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.message) || 'Không thể xóa địa chỉ');\n    }\n  }\n};\nexport default AddressService;","map":{"version":3,"names":["axios","API_URL","AddressService","getAddresses","token","trim","Error","console","log","response","get","headers","Authorization","data","error","_error$response","_error$response2","_error$response2$data","message","addAddress","address","post","_error$response3","_error$response4","_error$response4$data","updateAddress","id","updatedAddress","put","_error$response5","_error$response6","_error$response6$data","deleteAddress","delete","updatedAddresses","_error$response7","_error$response8","_error$response8$data"],"sources":["D:/Năm 4 Kì 2/Phát triển hệ thống thương mại điện tử/ecommerce-app/frontend/src/services/AddressService.js"],"sourcesContent":["// services/AddressService.js\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api/addresses';\r\n\r\nconst AddressService = {\r\n  getAddresses: async (token) => {\r\n    if (!token || typeof token !== 'string' || token.trim() === '') {\r\n      throw new Error('Token không tồn tại hoặc không hợp lệ. Vui lòng đăng nhập lại.');\r\n    }\r\n    try {\r\n      console.log('Gửi yêu cầu tới:', API_URL, 'với token:', token); // Debug\r\n      const response = await axios.get(API_URL, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      console.log('Danh sách địa chỉ từ server:', response.data); // Debug\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Lỗi từ server khi lấy địa chỉ:', error.response?.data || error.message);\r\n      throw new Error(error.response?.data?.message || 'Không thể tải danh sách địa chỉ');\r\n    }\r\n  },\r\n\r\n  addAddress: async (address, token) => {\r\n    if (!token || typeof token !== 'string' || token.trim() === '') {\r\n      throw new Error('Token không tồn tại hoặc không hợp lệ. Vui lòng đăng nhập lại.');\r\n    }\r\n    try {\r\n      const response = await axios.post(API_URL, address, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      return response.data.address;\r\n    } catch (error) {\r\n      console.error('Lỗi từ server khi thêm địa chỉ:', error.response?.data || error.message);\r\n      throw new Error(error.response?.data?.message || 'Không thể thêm địa chỉ');\r\n    }\r\n  },\r\n\r\n  updateAddress: async (id, updatedAddress, token) => {\r\n    if (!token || typeof token !== 'string' || token.trim() === '') {\r\n      throw new Error('Token không tồn tại hoặc không hợp lệ. Vui lòng đăng nhập lại.');\r\n    }\r\n    try {\r\n      const response = await axios.put(`${API_URL}/${id}`, updatedAddress, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      return response.data.address;\r\n    } catch (error) {\r\n      console.error('Lỗi từ server khi cập nhật địa chỉ:', error.response?.data || error.message);\r\n      throw new Error(error.response?.data?.message || 'Không thể cập nhật địa chỉ');\r\n    }\r\n  },\r\n\r\n  deleteAddress: async (id, token) => {\r\n    if (!token || typeof token !== 'string' || token.trim() === '') {\r\n      throw new Error('Token không tồn tại hoặc không hợp lệ. Vui lòng đăng nhập lại.');\r\n    }\r\n    try {\r\n      await axios.delete(`${API_URL}/${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      const updatedAddresses = await AddressService.getAddresses(token);\r\n      return updatedAddresses;\r\n    } catch (error) {\r\n      console.error('Lỗi từ server khi xóa địa chỉ:', error.response?.data || error.message);\r\n      throw new Error(error.response?.data?.message || 'Không thể xóa địa chỉ');\r\n    }\r\n  },\r\n};\r\n\r\nexport default AddressService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}