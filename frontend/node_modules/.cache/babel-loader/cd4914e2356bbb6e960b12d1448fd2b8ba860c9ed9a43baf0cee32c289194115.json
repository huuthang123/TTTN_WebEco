{"ast":null,"code":"// services/AddressService.js\nimport axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/addresses';\nconst AddressService = {\n  getAddresses: async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('Token không tồn tại. Vui lòng đăng nhập lại.');\n      }\n      const response = await axios.get(API_URL, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Lỗi khi lấy danh sách địa chỉ:', error);\n      throw error;\n    }\n  },\n  addAddress: async address => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('Token không tồn tại. Vui lòng đăng nhập lại.');\n      }\n      const response = await axios.post(API_URL, address, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Lỗi khi thêm địa chỉ:', error);\n      throw error;\n    }\n  },\n  updateAddress: async (id, updatedAddress) => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('Token không tồn tại. Vui lòng đăng nhập lại.');\n      }\n      const response = await axios.post(`${API_URL}/${id}`, updatedAddress, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Lỗi khi cập nhật địa chỉ:', error);\n      throw error;\n    }\n  },\n  deleteAddress: async id => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('Token không tồn tại. Vui lòng đăng nhập lại.');\n      }\n      await axios.delete(`${API_URL}/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const updatedAddresses = await AddressService.getAddresses();\n      return updatedAddresses;\n    } catch (error) {\n      console.error('Lỗi khi xóa địa chỉ:', error);\n      throw error;\n    }\n  },\n  getDefaultAddress: async () => {\n    try {\n      const addresses = await AddressService.getAddresses();\n      return addresses.length > 0 ? addresses[0] : null;\n    } catch (error) {\n      console.error('Lỗi khi lấy địa chỉ mặc định:', error);\n      return null;\n    }\n  }\n};\nexport default AddressService;","map":{"version":3,"names":["axios","API_URL","AddressService","getAddresses","token","localStorage","getItem","Error","response","get","headers","Authorization","data","error","console","addAddress","address","post","updateAddress","id","updatedAddress","deleteAddress","delete","updatedAddresses","getDefaultAddress","addresses","length"],"sources":["D:/Năm 4 Kì 2/Phát triển hệ thống thương mại điện tử/ecommerce-app/frontend/src/services/AddressService.js"],"sourcesContent":["// services/AddressService.js\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api/addresses';\r\n\r\nconst AddressService = {\r\n    getAddresses: async () => {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            if (!token) {\r\n                throw new Error('Token không tồn tại. Vui lòng đăng nhập lại.');\r\n            }\r\n            const response = await axios.get(API_URL, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            });\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Lỗi khi lấy danh sách địa chỉ:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    addAddress: async (address) => {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            if (!token) {\r\n                throw new Error('Token không tồn tại. Vui lòng đăng nhập lại.');\r\n            }\r\n            const response = await axios.post(API_URL, address, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            });\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Lỗi khi thêm địa chỉ:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    updateAddress: async (id, updatedAddress) => {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            if (!token) {\r\n                throw new Error('Token không tồn tại. Vui lòng đăng nhập lại.');\r\n            }\r\n            const response = await axios.post(`${API_URL}/${id}`, updatedAddress, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            });\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Lỗi khi cập nhật địa chỉ:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    deleteAddress: async (id) => {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            if (!token) {\r\n                throw new Error('Token không tồn tại. Vui lòng đăng nhập lại.');\r\n            }\r\n            await axios.delete(`${API_URL}/${id}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            });\r\n            const updatedAddresses = await AddressService.getAddresses();\r\n            return updatedAddresses;\r\n        } catch (error) {\r\n            console.error('Lỗi khi xóa địa chỉ:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    getDefaultAddress: async () => {\r\n        try {\r\n            const addresses = await AddressService.getAddresses();\r\n            return addresses.length > 0 ? addresses[0] : null;\r\n        } catch (error) {\r\n            console.error('Lỗi khi lấy địa chỉ mặc định:', error);\r\n            return null;\r\n        }\r\n    }\r\n};\r\n\r\nexport default AddressService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}