{"ast":null,"code":"var _jsxFileName = \"D:\\\\N\\u0103m 4 K\\xEC 2\\\\Ph\\xE1t tri\\u1EC3n h\\u1EC7 th\\u1ED1ng th\\u01B0\\u01A1ng m\\u1EA1i \\u0111i\\u1EC7n t\\u1EED\\\\ecommerce-app\\\\frontend\\\\src\\\\components\\\\ChatBot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useCart } from '../context/CartContext'; // Import useCart để lấy dữ liệu giỏ hàng\nimport { GoogleGenerativeAI } from '@google/generative-ai'; // Import Google AI SDK\nimport '../styles/ChatBot.css'; // Import file CSS riêng cho ChatBot\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ChatBot() {\n  _s();\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [userInput, setUserInput] = useState('');\n  const [isChatLoading, setIsChatLoading] = useState(false);\n\n  // Lấy dữ liệu giỏ hàng từ context\n  const {\n    cartItems\n  } = useCart();\n\n  // Khởi tạo Gemini API\n  const genAI = new GoogleGenerativeAI('YOUR_GEMINI_API_KEY'); // Thay YOUR_GEMINI_API_KEY bằng API Key của bạn\n  const model = genAI.getGenerativeModel({\n    model: 'gemini-pro'\n  });\n\n  // Khởi tạo tin nhắn ban đầu của chatbot\n  useEffect(() => {\n    const productInfo = cartItems.length > 0 ? cartItems.map(item => `${item.name}: ${item.price.toLocaleString()} VND, Số lượng: ${item.quantity}`).join('\\n') : 'Giỏ hàng của bạn đang trống.';\n    setChatMessages([{\n      role: 'model',\n      text: `Xin chào! Tôi là chatbot hỗ trợ giỏ hàng. Đây là danh sách sản phẩm trong giỏ hàng của bạn:\\n${productInfo}\\nHãy hỏi tôi bất kỳ câu hỏi nào về sản phẩm!`\n    }]);\n  }, [cartItems]);\n  const toggleChat = () => {\n    setIsChatOpen(!isChatOpen);\n  };\n\n  // Xử lý gửi tin nhắn đến Gemini API\n  const handleSendMessage = async () => {\n    if (!userInput.trim()) return;\n\n    // Thêm tin nhắn của người dùng vào chat\n    setChatMessages(prev => [...prev, {\n      role: 'user',\n      text: userInput\n    }]);\n    setIsChatLoading(true);\n    try {\n      // Tạo prompt với thông tin sản phẩm\n      const productInfo = cartItems.length > 0 ? cartItems.map(item => `${item.name}: ${item.price.toLocaleString()} VND, Số lượng: ${item.quantity}`).join('\\n') : 'Giỏ hàng của bạn đang trống.';\n      const prompt = `Bạn là một chatbot hỗ trợ giỏ hàng. Dưới đây là danh sách sản phẩm trong giỏ hàng:\\n${productInfo}\\nNgười dùng hỏi: ${userInput}\\nHãy trả lời câu hỏi của người dùng một cách chính xác và tự nhiên.`;\n\n      // Gọi Gemini API\n      const result = await model.generateContent(prompt);\n      const response = await result.response;\n      const text = response.text();\n\n      // Thêm phản hồi của chatbot vào chat\n      setChatMessages(prev => [...prev, {\n        role: 'model',\n        text\n      }]);\n    } catch (error) {\n      console.error('Lỗi khi gọi Gemini API:', error);\n      setChatMessages(prev => [...prev, {\n        role: 'model',\n        text: 'Xin lỗi, tôi không thể trả lời ngay bây giờ. Vui lòng thử lại sau!'\n      }]);\n    } finally {\n      setIsChatLoading(false);\n      setUserInput('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-icon\",\n      onClick: toggleChat,\n      children: \"\\uD83D\\uDCAC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chat-container ${isChatOpen ? '' : 'hidden'}`,\n      id: \"chatContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Chat v\\u1EDBi AI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-chat-btn\",\n          onClick: toggleChat,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-times\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-box\",\n        id: \"chatBox\",\n        children: [chatMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-message ${msg.role}`,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this)), isChatLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-message model\",\n          children: \"\\u0110ang x\\u1EED l\\xFD...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"userInput\",\n          placeholder: \"Nh\\u1EADp tin nh\\u1EAFn c\\u1EE7a b\\u1EA1n...\",\n          value: userInput,\n          onChange: e => setUserInput(e.target.value),\n          onKeyPress: e => e.key === 'Enter' && handleSendMessage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          children: \"G\\u1EEDi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(ChatBot, \"FbmWsE5Ma8YTW3zrnUn0z6wStqo=\", false, function () {\n  return [useCart];\n});\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","useEffect","useCart","GoogleGenerativeAI","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatBot","_s","isChatOpen","setIsChatOpen","chatMessages","setChatMessages","userInput","setUserInput","isChatLoading","setIsChatLoading","cartItems","genAI","model","getGenerativeModel","productInfo","length","map","item","name","price","toLocaleString","quantity","join","role","text","toggleChat","handleSendMessage","trim","prev","prompt","result","generateContent","response","error","console","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","msg","index","type","placeholder","value","onChange","e","target","onKeyPress","key","_c","$RefreshReg$"],"sources":["D:/Năm 4 Kì 2/Phát triển hệ thống thương mại điện tử/ecommerce-app/frontend/src/components/ChatBot.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useCart } from '../context/CartContext'; // Import useCart để lấy dữ liệu giỏ hàng\r\nimport { GoogleGenerativeAI } from '@google/generative-ai'; // Import Google AI SDK\r\nimport '../styles/ChatBot.css'; // Import file CSS riêng cho ChatBot\r\n\r\nfunction ChatBot() {\r\n    const [isChatOpen, setIsChatOpen] = useState(false);\r\n    const [chatMessages, setChatMessages] = useState([]);\r\n    const [userInput, setUserInput] = useState('');\r\n    const [isChatLoading, setIsChatLoading] = useState(false);\r\n\r\n    // Lấy dữ liệu giỏ hàng từ context\r\n    const { cartItems } = useCart();\r\n\r\n    // Khởi tạo Gemini API\r\n    const genAI = new GoogleGenerativeAI('YOUR_GEMINI_API_KEY'); // Thay YOUR_GEMINI_API_KEY bằng API Key của bạn\r\n    const model = genAI.getGenerativeModel({ model: 'gemini-pro' });\r\n\r\n    // Khởi tạo tin nhắn ban đầu của chatbot\r\n    useEffect(() => {\r\n        const productInfo = cartItems.length > 0\r\n            ? cartItems.map(item => `${item.name}: ${item.price.toLocaleString()} VND, Số lượng: ${item.quantity}`).join('\\n')\r\n            : 'Giỏ hàng của bạn đang trống.';\r\n        setChatMessages([\r\n            { role: 'model', text: `Xin chào! Tôi là chatbot hỗ trợ giỏ hàng. Đây là danh sách sản phẩm trong giỏ hàng của bạn:\\n${productInfo}\\nHãy hỏi tôi bất kỳ câu hỏi nào về sản phẩm!` }\r\n        ]);\r\n    }, [cartItems]);\r\n\r\n    const toggleChat = () => {\r\n        setIsChatOpen(!isChatOpen);\r\n    };\r\n\r\n    // Xử lý gửi tin nhắn đến Gemini API\r\n    const handleSendMessage = async () => {\r\n        if (!userInput.trim()) return;\r\n\r\n        // Thêm tin nhắn của người dùng vào chat\r\n        setChatMessages(prev => [...prev, { role: 'user', text: userInput }]);\r\n        setIsChatLoading(true);\r\n\r\n        try {\r\n            // Tạo prompt với thông tin sản phẩm\r\n            const productInfo = cartItems.length > 0\r\n                ? cartItems.map(item => `${item.name}: ${item.price.toLocaleString()} VND, Số lượng: ${item.quantity}`).join('\\n')\r\n                : 'Giỏ hàng của bạn đang trống.';\r\n            const prompt = `Bạn là một chatbot hỗ trợ giỏ hàng. Dưới đây là danh sách sản phẩm trong giỏ hàng:\\n${productInfo}\\nNgười dùng hỏi: ${userInput}\\nHãy trả lời câu hỏi của người dùng một cách chính xác và tự nhiên.`;\r\n\r\n            // Gọi Gemini API\r\n            const result = await model.generateContent(prompt);\r\n            const response = await result.response;\r\n            const text = response.text();\r\n\r\n            // Thêm phản hồi của chatbot vào chat\r\n            setChatMessages(prev => [...prev, { role: 'model', text }]);\r\n        } catch (error) {\r\n            console.error('Lỗi khi gọi Gemini API:', error);\r\n            setChatMessages(prev => [...prev, { role: 'model', text: 'Xin lỗi, tôi không thể trả lời ngay bây giờ. Vui lòng thử lại sau!' }]);\r\n        } finally {\r\n            setIsChatLoading(false);\r\n            setUserInput('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"chat-icon\" onClick={toggleChat}>\r\n                💬\r\n            </div>\r\n            <div className={`chat-container ${isChatOpen ? '' : 'hidden'}`} id=\"chatContainer\">\r\n                <div className=\"chat-header\">\r\n                    <h2>Chat với AI</h2>\r\n                    <button className=\"close-chat-btn\" onClick={toggleChat}>\r\n                        <i className=\"fas fa-times\"></i>\r\n                    </button>\r\n                </div>\r\n                <div className=\"chat-box\" id=\"chatBox\">\r\n                    {chatMessages.map((msg, index) => (\r\n                        <div key={index} className={`chat-message ${msg.role}`}>\r\n                            <p>{msg.text}</p>\r\n                        </div>\r\n                    ))}\r\n                    {isChatLoading && <div className=\"chat-message model\">Đang xử lý...</div>}\r\n                </div>\r\n                <div className=\"input-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"userInput\"\r\n                        placeholder=\"Nhập tin nhắn của bạn...\"\r\n                        value={userInput}\r\n                        onChange={(e) => setUserInput(e.target.value)}\r\n                        onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\r\n                    />\r\n                    <button onClick={handleSendMessage}>Gửi</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ChatBot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}