{"ast":null,"code":"var _jsxFileName = \"D:\\\\N\\u0103m 4 K\\xEC 2\\\\Ph\\xE1t tri\\u1EC3n h\\u1EC7 th\\u1ED1ng th\\u01B0\\u01A1ng m\\u1EA1i \\u0111i\\u1EC7n t\\u1EED\\\\ecommerce-app\\\\frontend\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect, useCallback } from 'react';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const {\n    user\n  } = useAuth();\n  const fetchCartFromServer = useCallback(async userId => {\n    try {\n      const res = await fetch(`http://localhost:5000/api/carts/${userId}`);\n      const data = await res.json();\n      if (res.ok) {\n        const itemsWithSelection = data.items.map(item => ({\n          ...item,\n          selected: item.selected || false\n        }));\n        setCartItems(itemsWithSelection);\n      } else {\n        setCartItems([]);\n      }\n    } catch (error) {\n      console.error(\"Lỗi khi lấy giỏ hàng từ server:\", error);\n      setCartItems([]);\n    }\n  }, []);\n  const loadCartFromLocalStorage = useCallback(() => {\n    try {\n      const savedCart = localStorage.getItem('cartItems');\n      setCartItems(savedCart ? JSON.parse(savedCart) : []);\n    } catch (error) {\n      console.error(\"Lỗi khi lấy giỏ hàng từ localStorage:\", error);\n      setCartItems([]);\n    }\n  }, []);\n  useEffect(() => {\n    if (user && user._id) {\n      fetchCartFromServer(user._id);\n    } else {\n      loadCartFromLocalStorage();\n    }\n  }, [user, fetchCartFromServer, loadCartFromLocalStorage]);\n  useEffect(() => {\n    if (!user) {\n      localStorage.setItem('cartItems', JSON.stringify(cartItems));\n    }\n  }, [cartItems, user]);\n  const toggleCart = () => setIsOpen(prev => !prev);\n  const addToCart = async product => {\n    const {\n      productId,\n      quantity = 1,\n      size,\n      name,\n      price,\n      image\n    } = product;\n    if (user && user._id) {\n      try {\n        const res = await fetch('http://localhost:5000/api/carts/add', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userId: user._id,\n            productId,\n            quantity,\n            size\n          })\n        });\n        if (!res.ok) {\n          throw new Error('Lỗi khi thêm vào giỏ hàng');\n        }\n        await fetchCartFromServer(user._id); // Đồng bộ sau khi thêm\n      } catch (error) {\n        console.error(\"Lỗi khi thêm vào giỏ hàng:\", error);\n      }\n    } else {\n      setCartItems(prev => {\n        const existingItem = prev.find(item => item.productId === productId && item.size === size);\n        if (existingItem) {\n          return prev.map(item => item.productId === productId && item.size === size ? {\n            ...item,\n            quantity: item.quantity + quantity\n          } : item);\n        }\n        return [...prev, {\n          productId,\n          quantity,\n          size,\n          name,\n          price,\n          image,\n          selected: false\n        }];\n      });\n    }\n  };\n  const increaseQuantity = async (productId, size) => {\n    if (user && user._id) {\n      try {\n        const res = await fetch('http://localhost:5000/api/carts/increase', {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userId: user._id,\n            productId,\n            size\n          })\n        });\n        if (!res.ok) throw new Error('Lỗi khi tăng số lượng');\n        await fetchCartFromServer(user._id); // Đồng bộ sau khi tăng\n      } catch (error) {\n        console.error(\"Lỗi khi tăng số lượng:\", error);\n      }\n    } else {\n      setCartItems(prev => prev.map(item => item.productId === productId && item.size === size ? {\n        ...item,\n        quantity: item.quantity + 1\n      } : item));\n    }\n  };\n  const decreaseQuantity = async (productId, size) => {\n    if (user && user._id) {\n      try {\n        const res = await fetch('http://localhost:5000/api/carts/decrease', {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userId: user._id,\n            productId,\n            size\n          })\n        });\n        if (!res.ok) throw new Error('Lỗi khi giảm số lượng');\n        await fetchCartFromServer(user._id); // Đồng bộ sau khi giảm\n      } catch (error) {\n        console.error(\"Lỗi khi giảm số lượng:\", error);\n      }\n    } else {\n      setCartItems(prev => prev.map(item => item.productId === productId && item.size === size && item.quantity > 1 ? {\n        ...item,\n        quantity: item.quantity - 1\n      } : item).filter(item => item.quantity > 0));\n    }\n  };\n  const removeFromCart = async (productId, size) => {\n    if (user && user._id) {\n      try {\n        const res = await fetch('http://localhost:5000/api/carts/remove', {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userId: user._id,\n            productId,\n            size\n          })\n        });\n        if (!res.ok) throw new Error('Lỗi khi xóa sản phẩm');\n        await fetchCartFromServer(user._id); // Đồng bộ sau khi xóa\n      } catch (error) {\n        console.error(\"Lỗi khi xóa sản phẩm:\", error);\n      }\n    } else {\n      setCartItems(prev => prev.filter(item => !(item.productId === productId && item.size === size)));\n    }\n  };\n  const toggleItemSelection = index => {\n    setCartItems(prev => prev.map((item, i) => i === index ? {\n      ...item,\n      selected: !item.selected\n    } : item));\n  };\n  const selectAll = () => {\n    setCartItems(prev => prev.map(item => ({\n      ...item,\n      selected: true\n    })));\n  };\n  const deselectAll = () => {\n    setCartItems(prev => prev.map(item => ({\n      ...item,\n      selected: false\n    })));\n  };\n  const total = cartItems.filter(item => item.selected).reduce((sum, item) => sum + item.price * item.quantity, 0);\n  const totalItems = cartItems.reduce((sum, item) => sum + item.quantity, 0);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      setCartItems,\n      isOpen,\n      toggleCart,\n      total,\n      totalItems,\n      addToCart,\n      increaseQuantity,\n      decreaseQuantity,\n      removeFromCart,\n      toggleItemSelection,\n      selectAll,\n      deselectAll,\n      fetchCartFromServer,\n      loadCartFromLocalStorage\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 9\n  }, this);\n};\n_s(CartProvider, \"uN928fFuIiIo9iju0GhX3R6jT1c=\", false, function () {\n  return [useAuth];\n});\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error(\"useCart must be used within a CartProvider\");\n  }\n  return context;\n};\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","useCallback","useAuth","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cartItems","setCartItems","isOpen","setIsOpen","user","fetchCartFromServer","userId","res","fetch","data","json","ok","itemsWithSelection","items","map","item","selected","error","console","loadCartFromLocalStorage","savedCart","localStorage","getItem","JSON","parse","_id","setItem","stringify","toggleCart","prev","addToCart","product","productId","quantity","size","name","price","image","method","headers","body","Error","existingItem","find","increaseQuantity","decreaseQuantity","filter","removeFromCart","toggleItemSelection","index","i","selectAll","deselectAll","total","reduce","sum","totalItems","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","context","$RefreshReg$"],"sources":["D:/Năm 4 Kì 2/Phát triển hệ thống thương mại điện tử/ecommerce-app/frontend/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect, useCallback } from 'react';\r\nimport { useAuth } from './AuthContext';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport const CartProvider = ({ children }) => {\r\n    const [cartItems, setCartItems] = useState([]);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const { user } = useAuth();\r\n\r\n    const fetchCartFromServer = useCallback(async (userId) => {\r\n        try {\r\n            const res = await fetch(`http://localhost:5000/api/carts/${userId}`);\r\n            const data = await res.json();\r\n            if (res.ok) {\r\n                const itemsWithSelection = data.items.map(item => ({\r\n                    ...item,\r\n                    selected: item.selected || false\r\n                }));\r\n                setCartItems(itemsWithSelection);\r\n            } else {\r\n                setCartItems([]);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Lỗi khi lấy giỏ hàng từ server:\", error);\r\n            setCartItems([]);\r\n        }\r\n    }, []);\r\n\r\n    const loadCartFromLocalStorage = useCallback(() => {\r\n        try {\r\n            const savedCart = localStorage.getItem('cartItems');\r\n            setCartItems(savedCart ? JSON.parse(savedCart) : []);\r\n        } catch (error) {\r\n            console.error(\"Lỗi khi lấy giỏ hàng từ localStorage:\", error);\r\n            setCartItems([]);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (user && user._id) {\r\n            fetchCartFromServer(user._id);\r\n        } else {\r\n            loadCartFromLocalStorage();\r\n        }\r\n    }, [user, fetchCartFromServer, loadCartFromLocalStorage]);\r\n\r\n    useEffect(() => {\r\n        if (!user) {\r\n            localStorage.setItem('cartItems', JSON.stringify(cartItems));\r\n        }\r\n    }, [cartItems, user]);\r\n\r\n    const toggleCart = () => setIsOpen(prev => !prev);\r\n\r\n    const addToCart = async (product) => {\r\n        const { productId, quantity = 1, size, name, price, image } = product;\r\n\r\n        if (user && user._id) {\r\n            try {\r\n                const res = await fetch('http://localhost:5000/api/carts/add', {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({ userId: user._id, productId, quantity, size })\r\n                });\r\n\r\n                if (!res.ok) {\r\n                    throw new Error('Lỗi khi thêm vào giỏ hàng');\r\n                }\r\n\r\n                await fetchCartFromServer(user._id); // Đồng bộ sau khi thêm\r\n            } catch (error) {\r\n                console.error(\"Lỗi khi thêm vào giỏ hàng:\", error);\r\n            }\r\n        } else {\r\n            setCartItems(prev => {\r\n                const existingItem = prev.find(item => item.productId === productId && item.size === size);\r\n                if (existingItem) {\r\n                    return prev.map(item =>\r\n                        item.productId === productId && item.size === size\r\n                            ? { ...item, quantity: item.quantity + quantity }\r\n                            : item\r\n                    );\r\n                }\r\n                return [...prev, { productId, quantity, size, name, price, image, selected: false }];\r\n            });\r\n        }\r\n    };\r\n\r\n    const increaseQuantity = async (productId, size) => {\r\n        if (user && user._id) {\r\n            try {\r\n                const res = await fetch('http://localhost:5000/api/carts/increase', {\r\n                    method: 'PUT',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({ userId: user._id, productId, size })\r\n                });\r\n                if (!res.ok) throw new Error('Lỗi khi tăng số lượng');\r\n                await fetchCartFromServer(user._id); // Đồng bộ sau khi tăng\r\n            } catch (error) {\r\n                console.error(\"Lỗi khi tăng số lượng:\", error);\r\n            }\r\n        } else {\r\n            setCartItems(prev => prev.map(item =>\r\n                item.productId === productId && item.size === size\r\n                    ? { ...item, quantity: item.quantity + 1 }\r\n                    : item\r\n            ));\r\n        }\r\n    };\r\n\r\n    const decreaseQuantity = async (productId, size) => {\r\n        if (user && user._id) {\r\n            try {\r\n                const res = await fetch('http://localhost:5000/api/carts/decrease', {\r\n                    method: 'PUT',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({ userId: user._id, productId, size })\r\n                });\r\n                if (!res.ok) throw new Error('Lỗi khi giảm số lượng');\r\n                await fetchCartFromServer(user._id); // Đồng bộ sau khi giảm\r\n            } catch (error) {\r\n                console.error(\"Lỗi khi giảm số lượng:\", error);\r\n            }\r\n        } else {\r\n            setCartItems(prev => prev.map(item =>\r\n                item.productId === productId && item.size === size && item.quantity > 1\r\n                    ? { ...item, quantity: item.quantity - 1 }\r\n                    : item\r\n            ).filter(item => item.quantity > 0));\r\n        }\r\n    };\r\n\r\n    const removeFromCart = async (productId, size) => {\r\n        if (user && user._id) {\r\n            try {\r\n                const res = await fetch('http://localhost:5000/api/carts/remove', {\r\n                    method: 'DELETE',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({ userId: user._id, productId, size })\r\n                });\r\n                if (!res.ok) throw new Error('Lỗi khi xóa sản phẩm');\r\n                await fetchCartFromServer(user._id); // Đồng bộ sau khi xóa\r\n            } catch (error) {\r\n                console.error(\"Lỗi khi xóa sản phẩm:\", error);\r\n            }\r\n        } else {\r\n            setCartItems(prev => prev.filter(item =>\r\n                !(item.productId === productId && item.size === size)\r\n            ));\r\n        }\r\n    };\r\n\r\n    const toggleItemSelection = (index) => {\r\n        setCartItems(prev => prev.map((item, i) =>\r\n            i === index ? { ...item, selected: !item.selected } : item\r\n        ));\r\n    };\r\n\r\n    const selectAll = () => {\r\n        setCartItems(prev => prev.map(item => ({ ...item, selected: true })));\r\n    };\r\n\r\n    const deselectAll = () => {\r\n        setCartItems(prev => prev.map(item => ({ ...item, selected: false })));\r\n    };\r\n\r\n    const total = cartItems\r\n        .filter(item => item.selected)\r\n        .reduce((sum, item) => sum + (item.price * item.quantity), 0);\r\n\r\n    const totalItems = cartItems.reduce((sum, item) => sum + item.quantity, 0);\r\n\r\n    return (\r\n        <CartContext.Provider\r\n            value={{\r\n                cartItems,\r\n                setCartItems,\r\n                isOpen,\r\n                toggleCart,\r\n                total,\r\n                totalItems,\r\n                addToCart,\r\n                increaseQuantity,\r\n                decreaseQuantity,\r\n                removeFromCart,\r\n                toggleItemSelection,\r\n                selectAll,\r\n                deselectAll,\r\n                fetchCartFromServer,\r\n                loadCartFromLocalStorage\r\n            }}\r\n        >\r\n            {children}\r\n        </CartContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useCart = () => {\r\n    const context = useContext(CartContext);\r\n    if (!context) {\r\n        throw new Error(\"useCart must be used within a CartProvider\");\r\n    }\r\n    return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}