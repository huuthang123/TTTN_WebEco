{"ast":null,"code":"var _jsxFileName = \"D:\\\\N\\u0103m 4 K\\xEC 2\\\\Ph\\xE1t tri\\u1EC3n h\\u1EC7 th\\u1ED1ng th\\u01B0\\u01A1ng m\\u1EA1i \\u0111i\\u1EC7n t\\u1EED\\\\ecommerce-app\\\\frontend\\\\src\\\\components\\\\ShippingAddressForm.jsx\",\n  _s = $RefreshSig$();\n// components/ShippingAddressForm.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport AddressApiService from '../services/AddressApiService';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ShippingAddressForm({\n  onAddressSelect\n}) {\n  _s();\n  const {\n    user\n  } = useAuth(); // Lấy thông tin user từ AuthContext\n  const [formData, setFormData] = useState({\n    province: '',\n    district: '',\n    ward: '',\n    detail: '',\n    fullName: '',\n    phone: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [savedAddresses, setSavedAddresses] = useState([]);\n  const [selectedAddressIndex, setSelectedAddressIndex] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [provinces, setProvinces] = useState([]);\n  const [districts, setDistricts] = useState([]);\n  const [wards, setWards] = useState([]);\n  useEffect(() => {\n    const fetchAddresses = async () => {\n      if (user) {\n        try {\n          const addresses = await AddressApiService.getAddresses();\n          setSavedAddresses(addresses);\n        } catch (error) {\n          setSavedAddresses([]);\n        }\n      }\n    };\n    fetchAddresses();\n  }, [user]);\n  const handleSubmit = async e => {\n    var _provinces$find, _districts$find, _wards$find;\n    e.preventDefault();\n    const provinceName = ((_provinces$find = provinces.find(p => p.code === parseInt(formData.province))) === null || _provinces$find === void 0 ? void 0 : _provinces$find.name) || '';\n    const districtName = ((_districts$find = districts.find(d => d.code === parseInt(formData.district))) === null || _districts$find === void 0 ? void 0 : _districts$find.name) || '';\n    const wardName = ((_wards$find = wards.find(w => w.code === parseInt(formData.ward))) === null || _wards$find === void 0 ? void 0 : _wards$find.name) || '';\n    const addressData = {\n      fullName: formData.fullName,\n      phone: formData.phone,\n      province: provinceName,\n      district: districtName,\n      ward: wardName,\n      detail: formData.detail\n    };\n    try {\n      if (isEditing && selectedAddressIndex !== null) {\n        const addressId = savedAddresses[selectedAddressIndex]._id;\n        const updatedAddress = await AddressApiService.updateAddress(addressId, addressData);\n        const updatedAddresses = [...savedAddresses];\n        updatedAddresses[selectedAddressIndex] = updatedAddress;\n        setSavedAddresses(updatedAddresses);\n        setIsEditing(false);\n      } else {\n        const newAddress = await AddressApiService.addAddress(addressData);\n        setSavedAddresses([...savedAddresses, newAddress]);\n      }\n      onAddressSelect({\n        fullName: addressData.fullName,\n        address: `${addressData.detail}, ${addressData.ward}, ${addressData.district}, ${addressData.province}`,\n        phone: addressData.phone\n      });\n      setFormData({\n        province: '',\n        district: '',\n        ward: '',\n        detail: '',\n        fullName: '',\n        phone: ''\n      });\n      setSelectedAddressIndex(null);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setErrors({\n        form: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Lỗi khi lưu địa chỉ'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0110\\u1ECBa ch\\u1EC9 giao h\\xE0ng\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), user && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User ID: \", user.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 22\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n_s(ShippingAddressForm, \"wtKTtv5IJzOa4F6G7eZtbsLyPnU=\", false, function () {\n  return [useAuth];\n});\n_c = ShippingAddressForm;\nexport default ShippingAddressForm;\nvar _c;\n$RefreshReg$(_c, \"ShippingAddressForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","AddressApiService","useAuth","jsxDEV","_jsxDEV","ShippingAddressForm","onAddressSelect","_s","user","formData","setFormData","province","district","ward","detail","fullName","phone","errors","setErrors","savedAddresses","setSavedAddresses","selectedAddressIndex","setSelectedAddressIndex","isEditing","setIsEditing","provinces","setProvinces","districts","setDistricts","wards","setWards","fetchAddresses","addresses","getAddresses","error","handleSubmit","e","_provinces$find","_districts$find","_wards$find","preventDefault","provinceName","find","p","code","parseInt","name","districtName","d","wardName","w","addressData","addressId","_id","updatedAddress","updateAddress","updatedAddresses","newAddress","addAddress","address","_error$response","_error$response$data","form","response","data","message","children","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["D:/Năm 4 Kì 2/Phát triển hệ thống thương mại điện tử/ecommerce-app/frontend/src/components/ShippingAddressForm.jsx"],"sourcesContent":["// components/ShippingAddressForm.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport AddressApiService from '../services/AddressApiService';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nfunction ShippingAddressForm({ onAddressSelect }) {\r\n    const { user } = useAuth(); // Lấy thông tin user từ AuthContext\r\n    const [formData, setFormData] = useState({\r\n        province: '',\r\n        district: '',\r\n        ward: '',\r\n        detail: '',\r\n        fullName: '',\r\n        phone: ''\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n    const [savedAddresses, setSavedAddresses] = useState([]);\r\n    const [selectedAddressIndex, setSelectedAddressIndex] = useState(null);\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [districts, setDistricts] = useState([]);\r\n    const [wards, setWards] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAddresses = async () => {\r\n            if (user) {\r\n                try {\r\n                    const addresses = await AddressApiService.getAddresses();\r\n                    setSavedAddresses(addresses);\r\n                } catch (error) {\r\n                    setSavedAddresses([]);\r\n                }\r\n            }\r\n        };\r\n        fetchAddresses();\r\n    }, [user]);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const provinceName = provinces.find(p => p.code === parseInt(formData.province))?.name || '';\r\n        const districtName = districts.find(d => d.code === parseInt(formData.district))?.name || '';\r\n        const wardName = wards.find(w => w.code === parseInt(formData.ward))?.name || '';\r\n        const addressData = {\r\n            fullName: formData.fullName,\r\n            phone: formData.phone,\r\n            province: provinceName,\r\n            district: districtName,\r\n            ward: wardName,\r\n            detail: formData.detail\r\n        };\r\n\r\n        try {\r\n            if (isEditing && selectedAddressIndex !== null) {\r\n                const addressId = savedAddresses[selectedAddressIndex]._id;\r\n                const updatedAddress = await AddressApiService.updateAddress(addressId, addressData);\r\n                const updatedAddresses = [...savedAddresses];\r\n                updatedAddresses[selectedAddressIndex] = updatedAddress;\r\n                setSavedAddresses(updatedAddresses);\r\n                setIsEditing(false);\r\n            } else {\r\n                const newAddress = await AddressApiService.addAddress(addressData);\r\n                setSavedAddresses([...savedAddresses, newAddress]);\r\n            }\r\n\r\n            onAddressSelect({\r\n                fullName: addressData.fullName,\r\n                address: `${addressData.detail}, ${addressData.ward}, ${addressData.district}, ${addressData.province}`,\r\n                phone: addressData.phone\r\n            });\r\n\r\n            setFormData({\r\n                province: '',\r\n                district: '',\r\n                ward: '',\r\n                detail: '',\r\n                fullName: '',\r\n                phone: ''\r\n            });\r\n            setSelectedAddressIndex(null);\r\n        } catch (error) {\r\n            setErrors({ form: error.response?.data?.message || 'Lỗi khi lưu địa chỉ' });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Địa chỉ giao hàng</h2>\r\n            {user && <p>User ID: {user.id}</p>} {/* Hiển thị userId */}\r\n            {/* Form và các phần khác */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ShippingAddressForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}