{"ast":null,"code":"var _jsxFileName = \"D:\\\\N\\u0103m 4 K\\xEC 2\\\\Ph\\xE1t tri\\u1EC3n h\\u1EC7 th\\u1ED1ng th\\u01B0\\u01A1ng m\\u1EA1i \\u0111i\\u1EC7n t\\u1EED\\\\ecommerce-app\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    console.log('Token from localStorage:', token);\n    if (token) {\n      axios.get('http://localhost:5000/api/users/me', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => {\n        console.log('User data from /me:', response.data);\n        // Lưu token vào user\n        setUser({\n          ...response.data,\n          token\n        });\n        setLoading(false);\n      }).catch(error => {\n        var _error$response;\n        console.error('Lỗi khi lấy thông tin user:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n        localStorage.removeItem('token');\n        setUser(null);\n        setLoading(false);\n      });\n    } else {\n      console.log('Không có token, bỏ qua gọi API /me');\n      setLoading(false);\n    }\n  }, []);\n  const login = async (email, password) => {\n    try {\n      if (!email || !password) {\n        throw new Error('Vui lòng nhập email và mật khẩu.');\n      }\n      console.log('Đang gửi request login:', {\n        email\n      });\n      const response = await axios.post('http://localhost:5000/api/users/login', {\n        email,\n        password\n      });\n      console.log('Response từ login:', response.data);\n      const {\n        token\n      } = response.data;\n      if (!token) throw new Error('Không nhận được token từ server');\n      localStorage.setItem('token', token);\n      const userResponse = await axios.get('http://localhost:5000/api/users/me', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log('User data sau login:', userResponse.data);\n      // Lưu token vào user\n      setUser({\n        ...userResponse.data,\n        token\n      });\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Email hoặc mật khẩu không đúng';\n      console.error('Lỗi login:', errorMessage);\n      throw new Error(errorMessage);\n    }\n  };\n  const register = async (username, email, phone, password) => {\n    try {\n      if (!username || !email || !phone || !password) {\n        throw new Error('Vui lòng nhập đầy đủ thông tin.');\n      }\n      console.log('Đang gửi request register:', {\n        username,\n        email,\n        phone\n      });\n      const response = await axios.post('http://localhost:5000/api/users/register', {\n        username,\n        email,\n        phone,\n        password\n      });\n      console.log('Response từ register:', response.data);\n      const {\n        token\n      } = response.data;\n      if (!token) throw new Error('Không nhận được token từ server');\n      localStorage.setItem('token', token);\n      const userResponse = await axios.get('http://localhost:5000/api/users/me', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log('User data sau register:', userResponse.data);\n      // Lưu token vào user\n      setUser({\n        ...userResponse.data,\n        token\n      });\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const errorMessage = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Đăng ký thất bại';\n      console.error('Lỗi register:', errorMessage);\n      throw new Error(errorMessage);\n    }\n  };\n  const logout = () => {\n    console.log('Đăng xuất, xóa token và user');\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","token","localStorage","getItem","console","log","get","headers","Authorization","then","response","data","catch","error","_error$response","message","removeItem","login","email","password","Error","post","setItem","userResponse","_error$response2","_error$response2$data","errorMessage","register","username","phone","_error$response3","_error$response3$data","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["D:/Năm 4 Kì 2/Phát triển hệ thống thương mại điện tử/ecommerce-app/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        console.log('Token from localStorage:', token);\r\n        if (token) {\r\n            axios\r\n                .get('http://localhost:5000/api/users/me', {\r\n                    headers: { Authorization: `Bearer ${token}` },\r\n                })\r\n                .then((response) => {\r\n                    console.log('User data from /me:', response.data);\r\n                    // Lưu token vào user\r\n                    setUser({ ...response.data, token });\r\n                    setLoading(false);\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Lỗi khi lấy thông tin user:', error.response?.data || error.message);\r\n                    localStorage.removeItem('token');\r\n                    setUser(null);\r\n                    setLoading(false);\r\n                });\r\n        } else {\r\n            console.log('Không có token, bỏ qua gọi API /me');\r\n            setLoading(false);\r\n        }\r\n    }, []);\r\n\r\n    const login = async (email, password) => {\r\n        try {\r\n            if (!email || !password) {\r\n                throw new Error('Vui lòng nhập email và mật khẩu.');\r\n            }\r\n            console.log('Đang gửi request login:', { email });\r\n            const response = await axios.post('http://localhost:5000/api/users/login', {\r\n                email,\r\n                password,\r\n            });\r\n            console.log('Response từ login:', response.data);\r\n            const { token } = response.data;\r\n            if (!token) throw new Error('Không nhận được token từ server');\r\n            localStorage.setItem('token', token);\r\n            const userResponse = await axios.get('http://localhost:5000/api/users/me', {\r\n                headers: { Authorization: `Bearer ${token}` },\r\n            });\r\n            console.log('User data sau login:', userResponse.data);\r\n            // Lưu token vào user\r\n            setUser({ ...userResponse.data, token });\r\n        } catch (error) {\r\n            const errorMessage = error.response?.data?.message || 'Email hoặc mật khẩu không đúng';\r\n            console.error('Lỗi login:', errorMessage);\r\n            throw new Error(errorMessage);\r\n        }\r\n    };\r\n\r\n    const register = async (username, email, phone, password) => {\r\n        try {\r\n            if (!username || !email || !phone || !password) {\r\n                throw new Error('Vui lòng nhập đầy đủ thông tin.');\r\n            }\r\n            console.log('Đang gửi request register:', { username, email, phone });\r\n            const response = await axios.post('http://localhost:5000/api/users/register', {\r\n                username,\r\n                email,\r\n                phone,\r\n                password,\r\n            });\r\n            console.log('Response từ register:', response.data);\r\n            const { token } = response.data;\r\n            if (!token) throw new Error('Không nhận được token từ server');\r\n            localStorage.setItem('token', token);\r\n            const userResponse = await axios.get('http://localhost:5000/api/users/me', {\r\n                headers: { Authorization: `Bearer ${token}` },\r\n            });\r\n            console.log('User data sau register:', userResponse.data);\r\n            // Lưu token vào user\r\n            setUser({ ...userResponse.data, token });\r\n        } catch (error) {\r\n            const errorMessage = error.response?.data?.message || 'Đăng ký thất bại';\r\n            console.error('Lỗi register:', errorMessage);\r\n            throw new Error(errorMessage);\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        console.log('Đăng xuất, xóa token và user');\r\n        localStorage.removeItem('token');\r\n        setUser(null);\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user, loading, login, register, logout }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}