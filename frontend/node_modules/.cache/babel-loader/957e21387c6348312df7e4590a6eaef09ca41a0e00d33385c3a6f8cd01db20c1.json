{"ast":null,"code":"// services/AddressService.js\nimport axios from'axios';const API_URL='http://localhost:5000/api/addresses';const AddressService={getAddresses:async()=>{try{const token=localStorage.getItem('token');if(!token){throw new Error('Token không tồn tại. Vui lòng đăng nhập lại.');}const response=await axios.get(API_URL,{headers:{Authorization:`Bearer ${token}`}});return response.data;}catch(error){console.error('Lỗi khi lấy danh sách địa chỉ:',error);throw error;}},addAddress:async address=>{try{const token=localStorage.getItem('token');if(!token){throw new Error('Token không tồn tại. Vui lòng đăng nhập lại.');}const response=await axios.post(API_URL,address,{headers:{Authorization:`Bearer ${token}`}});return response.data;}catch(error){console.error('Lỗi khi thêm địa chỉ:',error);throw error;}},updateAddress:async(id,updatedAddress)=>{try{const token=localStorage.getItem('token');if(!token){throw new Error('Token không tồn tại. Vui lòng đăng nhập lại.');}const response=await axios.post(`${API_URL}/${id}`,updatedAddress,{headers:{Authorization:`Bearer ${token}`}});return response.data;}catch(error){console.error('Lỗi khi cập nhật địa chỉ:',error);throw error;}},deleteAddress:async id=>{try{const token=localStorage.getItem('token');if(!token){throw new Error('Token không tồn tại. Vui lòng đăng nhập lại.');}await axios.delete(`${API_URL}/${id}`,{headers:{Authorization:`Bearer ${token}`}});const updatedAddresses=await AddressService.getAddresses();return updatedAddresses;}catch(error){console.error('Lỗi khi xóa địa chỉ:',error);throw error;}},getDefaultAddress:async()=>{try{const addresses=await AddressService.getAddresses();return addresses.length>0?addresses[0]:null;}catch(error){console.error('Lỗi khi lấy địa chỉ mặc định:',error);return null;}}};export default AddressService;","map":{"version":3,"names":["axios","API_URL","AddressService","getAddresses","token","localStorage","getItem","Error","response","get","headers","Authorization","data","error","console","addAddress","address","post","updateAddress","id","updatedAddress","deleteAddress","delete","updatedAddresses","getDefaultAddress","addresses","length"],"sources":["D:/Năm 4 Kì 2/Phát triển hệ thống thương mại điện tử/ecommerce-app/frontend/src/services/AddressService.js"],"sourcesContent":["// services/AddressService.js\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api/addresses';\r\n\r\nconst AddressService = {\r\n    getAddresses: async () => {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            if (!token) {\r\n                throw new Error('Token không tồn tại. Vui lòng đăng nhập lại.');\r\n            }\r\n            const response = await axios.get(API_URL, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            });\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Lỗi khi lấy danh sách địa chỉ:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    addAddress: async (address) => {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            if (!token) {\r\n                throw new Error('Token không tồn tại. Vui lòng đăng nhập lại.');\r\n            }\r\n            const response = await axios.post(API_URL, address, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            });\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Lỗi khi thêm địa chỉ:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    updateAddress: async (id, updatedAddress) => {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            if (!token) {\r\n                throw new Error('Token không tồn tại. Vui lòng đăng nhập lại.');\r\n            }\r\n            const response = await axios.post(`${API_URL}/${id}`, updatedAddress, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            });\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Lỗi khi cập nhật địa chỉ:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    deleteAddress: async (id) => {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            if (!token) {\r\n                throw new Error('Token không tồn tại. Vui lòng đăng nhập lại.');\r\n            }\r\n            await axios.delete(`${API_URL}/${id}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            });\r\n            const updatedAddresses = await AddressService.getAddresses();\r\n            return updatedAddresses;\r\n        } catch (error) {\r\n            console.error('Lỗi khi xóa địa chỉ:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    getDefaultAddress: async () => {\r\n        try {\r\n            const addresses = await AddressService.getAddresses();\r\n            return addresses.length > 0 ? addresses[0] : null;\r\n        } catch (error) {\r\n            console.error('Lỗi khi lấy địa chỉ mặc định:', error);\r\n            return null;\r\n        }\r\n    }\r\n};\r\n\r\nexport default AddressService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}