{"ast":null,"code":"var _jsxFileName = \"D:\\\\N\\u0103m 4 K\\xEC 2\\\\Ph\\xE1t tri\\u1EC3n h\\u1EC7 th\\u1ED1ng th\\u01B0\\u01A1ng m\\u1EA1i \\u0111i\\u1EC7n t\\u1EED\\\\ecommerce-app\\\\frontend\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect, useCallback } from 'react';\nimport { useAuth } from './AuthContext';\nimport { fetchCart, addToCart, removeFromCart, increaseQuantity, decreaseQuantity } from '../services/CartService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const {\n    user\n  } = useAuth();\n  const loadCartFromServer = useCallback(async () => {\n    if (user && user._id) {\n      try {\n        const cart = await fetchCart(user._id);\n        console.log('Cart from server:', cart); // Kiểm tra dữ liệu\n        const itemsWithSelection = cart.items.map(item => ({\n          ...item,\n          selected: item.selected || false\n        }));\n        setCartItems(itemsWithSelection);\n      } catch (error) {\n        setCartItems([]);\n      }\n    }\n  }, [user]);\n  const loadCartFromLocalStorage = useCallback(() => {\n    try {\n      const savedCart = localStorage.getItem('cartItems');\n      setCartItems(savedCart ? JSON.parse(savedCart) : []);\n    } catch (error) {\n      console.error(\"Lỗi khi lấy giỏ hàng từ localStorage:\", error);\n      setCartItems([]);\n    }\n  }, []);\n  useEffect(() => {\n    if (user && user._id) {\n      loadCartFromServer();\n    } else {\n      console.warn('Không có user._id, sử dụng localStorage:', user);\n      loadCartFromLocalStorage();\n    }\n  }, [user, loadCartFromServer, loadCartFromLocalStorage]);\n  useEffect(() => {\n    if (!user || !user._id) {\n      localStorage.setItem('cartItems', JSON.stringify(cartItems));\n    }\n  }, [cartItems, user]);\n  const toggleCart = () => setIsOpen(prev => !prev);\n  const handleAddToCart = async product => {\n    const {\n      productId,\n      quantity = 1,\n      size,\n      name,\n      price,\n      image\n    } = product;\n    if (user && user._id) {\n      try {\n        await addToCart(user._id, {\n          productId,\n          quantity,\n          size,\n          name,\n          price,\n          image\n        });\n        await loadCartFromServer();\n      } catch (error) {\n        // Lỗi đã được log trong CartService\n      }\n    } else {\n      setCartItems(prev => {\n        const existingItem = prev.find(item => item.productId === productId && item.size === size);\n        if (existingItem) {\n          return prev.map(item => item.productId === productId && item.size === size ? {\n            ...item,\n            quantity: item.quantity + quantity\n          } : item);\n        }\n        return [...prev, {\n          productId,\n          quantity,\n          size,\n          name,\n          price,\n          image,\n          selected: false\n        }];\n      });\n    }\n  };\n  const handleRemoveFromCart = async (productId, size) => {\n    if (user && user._id) {\n      try {\n        await removeFromCart(user._id, productId, size);\n        await loadCartFromServer();\n      } catch (error) {\n        // Lỗi đã được log trong CartService\n      }\n    } else {\n      setCartItems(prev => prev.filter(item => !(item.productId === productId && item.size === size)));\n    }\n  };\n  const handleIncreaseQuantity = async (productId, size) => {\n    if (user && user._id) {\n      try {\n        await increaseQuantity(user._id, productId, size);\n        await loadCartFromServer();\n      } catch (error) {\n        // Lỗi đã được log trong CartService\n      }\n    } else {\n      setCartItems(prev => prev.map(item => item.productId === productId && item.size === size ? {\n        ...item,\n        quantity: item.quantity + 1\n      } : item));\n    }\n  };\n  const handleDecreaseQuantity = async (productId, size) => {\n    if (user && user._id) {\n      try {\n        await decreaseQuantity(user._id, productId, size);\n        await loadCartFromServer();\n      } catch (error) {\n        // Lỗi đã được log trong CartService\n      }\n    } else {\n      setCartItems(prev => prev.map(item => item.productId === productId && item.size === size && item.quantity > 1 ? {\n        ...item,\n        quantity: item.quantity - 1\n      } : item).filter(item => item.quantity > 0));\n    }\n  };\n  const handleSelectAll = isSelected => {\n    setCartItems(prev => prev.map(item => ({\n      ...item,\n      selected: isSelected\n    })));\n    if (!user || !user._id) {\n      localStorage.setItem('cartItems', JSON.stringify(cartItems.map(item => ({\n        ...item,\n        selected: isSelected\n      }))));\n    }\n  };\n  const handleToggleItemSelection = (productId, size) => {\n    setCartItems(prev => prev.map(item => item.productId === productId && item.size === size ? {\n      ...item,\n      selected: !item.selected\n    } : item));\n    if (!user || !user._id) {\n      localStorage.setItem('cartItems', JSON.stringify(cartItems.map(item => item.productId === productId && item.size === size ? {\n        ...item,\n        selected: !item.selected\n      } : item)));\n    }\n  };\n  const total = cartItems.filter(item => item.selected).reduce((sum, item) => sum + item.price * item.quantity, 0);\n  const totalItems = cartItems.reduce((sum, item) => sum + item.quantity, 0);\n  const displaySize = size => {\n    switch (size) {\n      case \"0.25\":\n        return \"0.25kg\";\n      case \"0.5\":\n        return \"0.5kg\";\n      case \"1\":\n        return \"1kg\";\n      default:\n        return size;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      setCartItems,\n      isOpen,\n      toggleCart,\n      total,\n      totalItems,\n      addToCart: handleAddToCart,\n      removeFromCart: handleRemoveFromCart,\n      increaseQuantity: handleIncreaseQuantity,\n      decreaseQuantity: handleDecreaseQuantity,\n      selectAll: handleSelectAll,\n      toggleItemSelection: handleToggleItemSelection,\n      fetchCartFromServer: loadCartFromServer,\n      loadCartFromLocalStorage,\n      displaySize\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 9\n  }, this);\n};\n_s(CartProvider, \"Qzy9ATkRjqkBtTrJ6s/+c7c7KMw=\", false, function () {\n  return [useAuth];\n});\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error(\"useCart must be used within a CartProvider\");\n  }\n  return context;\n};\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","useCallback","useAuth","fetchCart","addToCart","removeFromCart","increaseQuantity","decreaseQuantity","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cartItems","setCartItems","isOpen","setIsOpen","user","loadCartFromServer","_id","cart","console","log","itemsWithSelection","items","map","item","selected","error","loadCartFromLocalStorage","savedCart","localStorage","getItem","JSON","parse","warn","setItem","stringify","toggleCart","prev","handleAddToCart","product","productId","quantity","size","name","price","image","existingItem","find","handleRemoveFromCart","filter","handleIncreaseQuantity","handleDecreaseQuantity","handleSelectAll","isSelected","handleToggleItemSelection","total","reduce","sum","totalItems","displaySize","Provider","value","selectAll","toggleItemSelection","fetchCartFromServer","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","context","Error","$RefreshReg$"],"sources":["D:/Năm 4 Kì 2/Phát triển hệ thống thương mại điện tử/ecommerce-app/frontend/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect, useCallback } from 'react';\r\nimport { useAuth } from './AuthContext';\r\nimport { fetchCart, addToCart, removeFromCart, increaseQuantity, decreaseQuantity } from '../services/CartService';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport const CartProvider = ({ children }) => {\r\n    const [cartItems, setCartItems] = useState([]);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const { user } = useAuth();\r\n\r\n    const loadCartFromServer = useCallback(async () => {\r\n        if (user && user._id) {\r\n            try {\r\n                const cart = await fetchCart(user._id);\r\n                console.log('Cart from server:', cart); // Kiểm tra dữ liệu\r\n                const itemsWithSelection = cart.items.map(item => ({\r\n                    ...item,\r\n                    selected: item.selected || false\r\n                }));\r\n                setCartItems(itemsWithSelection);\r\n            } catch (error) {\r\n                setCartItems([]);\r\n            }\r\n        }\r\n    }, [user]);\r\n\r\n    const loadCartFromLocalStorage = useCallback(() => {\r\n        try {\r\n            const savedCart = localStorage.getItem('cartItems');\r\n            setCartItems(savedCart ? JSON.parse(savedCart) : []);\r\n        } catch (error) {\r\n            console.error(\"Lỗi khi lấy giỏ hàng từ localStorage:\", error);\r\n            setCartItems([]);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (user && user._id) {\r\n            loadCartFromServer();\r\n        } else {\r\n            console.warn('Không có user._id, sử dụng localStorage:', user);\r\n            loadCartFromLocalStorage();\r\n        }\r\n    }, [user, loadCartFromServer, loadCartFromLocalStorage]);\r\n\r\n    useEffect(() => {\r\n        if (!user || !user._id) {\r\n            localStorage.setItem('cartItems', JSON.stringify(cartItems));\r\n        }\r\n    }, [cartItems, user]);\r\n\r\n    const toggleCart = () => setIsOpen(prev => !prev);\r\n\r\n    const handleAddToCart = async (product) => {\r\n        const { productId, quantity = 1, size, name, price, image } = product;\r\n\r\n        if (user && user._id) {\r\n            try {\r\n                await addToCart(user._id, { productId, quantity, size, name, price, image });\r\n                await loadCartFromServer();\r\n            } catch (error) {\r\n                // Lỗi đã được log trong CartService\r\n            }\r\n        } else {\r\n            setCartItems(prev => {\r\n                const existingItem = prev.find(item => item.productId === productId && item.size === size);\r\n                if (existingItem) {\r\n                    return prev.map(item =>\r\n                        item.productId === productId && item.size === size\r\n                            ? { ...item, quantity: item.quantity + quantity }\r\n                            : item\r\n                    );\r\n                }\r\n                return [...prev, { productId, quantity, size, name, price, image, selected: false }];\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleRemoveFromCart = async (productId, size) => {\r\n        if (user && user._id) {\r\n            try {\r\n                await removeFromCart(user._id, productId, size);\r\n                await loadCartFromServer();\r\n            } catch (error) {\r\n                // Lỗi đã được log trong CartService\r\n            }\r\n        } else {\r\n            setCartItems(prev => \r\n                prev.filter(item => !(item.productId === productId && item.size === size))\r\n            );\r\n        }\r\n    };\r\n\r\n    const handleIncreaseQuantity = async (productId, size) => {\r\n        if (user && user._id) {\r\n            try {\r\n                await increaseQuantity(user._id, productId, size);\r\n                await loadCartFromServer();\r\n            } catch (error) {\r\n                // Lỗi đã được log trong CartService\r\n            }\r\n        } else {\r\n            setCartItems(prev =>\r\n                prev.map(item =>\r\n                    item.productId === productId && item.size === size\r\n                        ? { ...item, quantity: item.quantity + 1 }\r\n                        : item\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const handleDecreaseQuantity = async (productId, size) => {\r\n        if (user && user._id) {\r\n            try {\r\n                await decreaseQuantity(user._id, productId, size);\r\n                await loadCartFromServer();\r\n            } catch (error) {\r\n                // Lỗi đã được log trong CartService\r\n            }\r\n        } else {\r\n            setCartItems(prev =>\r\n                prev.map(item =>\r\n                    item.productId === productId && item.size === size && item.quantity > 1\r\n                        ? { ...item, quantity: item.quantity - 1 }\r\n                        : item\r\n                ).filter(item => item.quantity > 0)\r\n            );\r\n        }\r\n    };\r\n\r\n    const handleSelectAll = (isSelected) => {\r\n        setCartItems(prev =>\r\n            prev.map(item => ({\r\n                ...item,\r\n                selected: isSelected\r\n            }))\r\n        );\r\n        if (!user || !user._id) {\r\n            localStorage.setItem('cartItems', JSON.stringify(cartItems.map(item => ({\r\n                ...item,\r\n                selected: isSelected\r\n            }))));\r\n        }\r\n    };\r\n\r\n    const handleToggleItemSelection = (productId, size) => {\r\n        setCartItems(prev =>\r\n            prev.map(item =>\r\n                item.productId === productId && item.size === size\r\n                    ? { ...item, selected: !item.selected }\r\n                    : item\r\n            )\r\n        );\r\n        if (!user || !user._id) {\r\n            localStorage.setItem('cartItems', JSON.stringify(cartItems.map(item =>\r\n                item.productId === productId && item.size === size\r\n                    ? { ...item, selected: !item.selected }\r\n                    : item\r\n            )));\r\n        }\r\n    };\r\n\r\n    const total = cartItems\r\n        .filter(item => item.selected)\r\n        .reduce((sum, item) => sum + (item.price * item.quantity), 0);\r\n\r\n    const totalItems = cartItems.reduce((sum, item) => sum + item.quantity, 0);\r\n\r\n    const displaySize = (size) => {\r\n        switch (size) {\r\n            case \"0.25\": return \"0.25kg\";\r\n            case \"0.5\": return \"0.5kg\";\r\n            case \"1\": return \"1kg\";\r\n            default: return size;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <CartContext.Provider\r\n            value={{\r\n                cartItems,\r\n                setCartItems,\r\n                isOpen,\r\n                toggleCart,\r\n                total,\r\n                totalItems,\r\n                addToCart: handleAddToCart,\r\n                removeFromCart: handleRemoveFromCart,\r\n                increaseQuantity: handleIncreaseQuantity,\r\n                decreaseQuantity: handleDecreaseQuantity,\r\n                selectAll: handleSelectAll,\r\n                toggleItemSelection: handleToggleItemSelection,\r\n                fetchCartFromServer: loadCartFromServer,\r\n                loadCartFromLocalStorage,\r\n                displaySize\r\n            }}\r\n        >\r\n            {children}\r\n        </CartContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useCart = () => {\r\n    const context = useContext(CartContext);\r\n    if (!context) {\r\n        throw new Error(\"useCart must be used within a CartProvider\");\r\n    }\r\n    return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}