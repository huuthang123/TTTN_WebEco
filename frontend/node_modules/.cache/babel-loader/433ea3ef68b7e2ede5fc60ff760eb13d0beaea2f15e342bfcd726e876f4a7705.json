{"ast":null,"code":"var _jsxFileName = \"D:\\\\N\\u0103m 4 K\\xEC 2\\\\Ph\\xE1t tri\\u1EC3n h\\u1EC7 th\\u1ED1ng th\\u01B0\\u01A1ng m\\u1EA1i \\u0111i\\u1EC7n t\\u1EED\\\\ecommerce-app\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    const tempUserId = localStorage.getItem(\"tempUserId\");\n    if (token) {\n      axios.get(\"http://localhost:5000/api/users/me\") // Không cần token\n      .then(response => {\n        console.log(\"User data from /me:\", response.data);\n        setUser({\n          ...response.data,\n          token\n        });\n        setLoading(false);\n      }).catch(error => {\n        var _error$response;\n        console.error(\"Lỗi khi lấy thông tin user:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n        localStorage.removeItem(\"token\");\n        setUser(null);\n        setLoading(false);\n      });\n    } else if (tempUserId) {\n      setUser({\n        _id: tempUserId\n      });\n      setLoading(false);\n    } else {\n      console.log(\"Không có token hoặc tempUserId, tạo guest user\");\n      const guestId = `guest-${Math.random().toString(36).substr(2, 9)}`;\n      localStorage.setItem(\"tempUserId\", guestId);\n      setUser({\n        _id: guestId\n      });\n      setLoading(false);\n    }\n  }, []);\n  const login = async (email, password) => {\n    try {\n      if (!email || !password) {\n        throw new Error(\"Vui lòng nhập email và mật khẩu.\");\n      }\n      console.log(\"Đang gửi request login:\", {\n        email\n      });\n      const response = await axios.post(\"http://localhost:5000/api/users/login\", {\n        email,\n        password\n      });\n      console.log(\"Response từ login:\", response.data);\n      const {\n        token\n      } = response.data;\n      if (!token) throw new Error(\"Không nhận được token từ server\");\n      localStorage.setItem(\"token\", token);\n      localStorage.removeItem(\"tempUserId\"); // Xóa tempUserId khi đăng nhập thật\n      const userResponse = await axios.get(\"http://localhost:5000/api/users/me\"); // Không cần token\n      console.log(\"User data sau login:\", userResponse.data);\n      setUser({\n        ...userResponse.data,\n        token\n      });\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Email hoặc mật khẩu không đúng\";\n      console.error(\"Lỗi login:\", errorMessage);\n      throw new Error(errorMessage);\n    }\n  };\n  const register = async (username, email, phone, password) => {\n    try {\n      if (!username || !email || !phone || !password) {\n        throw new Error(\"Vui lòng nhập đầy đủ thông tin.\");\n      }\n      console.log(\"Đang gửi request register:\", {\n        username,\n        email,\n        phone\n      });\n      const response = await axios.post(\"http://localhost:5000/api/users/register\", {\n        username,\n        email,\n        phone,\n        password\n      });\n      console.log(\"Response từ register:\", response.data);\n      const {\n        token\n      } = response.data;\n      if (!token) throw new Error(\"Không nhận được token từ server\");\n      localStorage.setItem(\"token\", token);\n      localStorage.removeItem(\"tempUserId\"); // Xóa tempUserId khi đăng ký thật\n      const userResponse = await axios.get(\"http://localhost:5000/api/users/me\"); // Không cần token\n      console.log(\"User data sau register:\", userResponse.data);\n      setUser({\n        ...userResponse.data,\n        token\n      });\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const errorMessage = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || \"Đăng ký thất bại\";\n      console.error(\"Lỗi register:\", errorMessage);\n      throw new Error(errorMessage);\n    }\n  };\n  const logout = () => {\n    console.log(\"Đăng xuất, xóa token và user\");\n    localStorage.removeItem(\"token\");\n    const guestId = `guest-${Math.random().toString(36).substr(2, 9)}`;\n    localStorage.setItem(\"tempUserId\", guestId);\n    setUser({\n      _id: guestId\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","token","localStorage","getItem","tempUserId","get","then","response","console","log","data","catch","error","_error$response","message","removeItem","_id","guestId","Math","random","toString","substr","setItem","login","email","password","Error","post","userResponse","_error$response2","_error$response2$data","errorMessage","register","username","phone","_error$response3","_error$response3$data","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["D:/Năm 4 Kì 2/Phát triển hệ thống thương mại điện tử/ecommerce-app/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const tempUserId = localStorage.getItem(\"tempUserId\");\r\n    if (token) {\r\n      axios\r\n        .get(\"http://localhost:5000/api/users/me\") // Không cần token\r\n        .then((response) => {\r\n          console.log(\"User data from /me:\", response.data);\r\n          setUser({ ...response.data, token });\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Lỗi khi lấy thông tin user:\", error.response?.data || error.message);\r\n          localStorage.removeItem(\"token\");\r\n          setUser(null);\r\n          setLoading(false);\r\n        });\r\n    } else if (tempUserId) {\r\n      setUser({ _id: tempUserId });\r\n      setLoading(false);\r\n    } else {\r\n      console.log(\"Không có token hoặc tempUserId, tạo guest user\");\r\n      const guestId = `guest-${Math.random().toString(36).substr(2, 9)}`;\r\n      localStorage.setItem(\"tempUserId\", guestId);\r\n      setUser({ _id: guestId });\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      if (!email || !password) {\r\n        throw new Error(\"Vui lòng nhập email và mật khẩu.\");\r\n      }\r\n      console.log(\"Đang gửi request login:\", { email });\r\n      const response = await axios.post(\"http://localhost:5000/api/users/login\", {\r\n        email,\r\n        password,\r\n      });\r\n      console.log(\"Response từ login:\", response.data);\r\n      const { token } = response.data;\r\n      if (!token) throw new Error(\"Không nhận được token từ server\");\r\n      localStorage.setItem(\"token\", token);\r\n      localStorage.removeItem(\"tempUserId\"); // Xóa tempUserId khi đăng nhập thật\r\n      const userResponse = await axios.get(\"http://localhost:5000/api/users/me\"); // Không cần token\r\n      console.log(\"User data sau login:\", userResponse.data);\r\n      setUser({ ...userResponse.data, token });\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.message || \"Email hoặc mật khẩu không đúng\";\r\n      console.error(\"Lỗi login:\", errorMessage);\r\n      throw new Error(errorMessage);\r\n    }\r\n  };\r\n\r\n  const register = async (username, email, phone, password) => {\r\n    try {\r\n      if (!username || !email || !phone || !password) {\r\n        throw new Error(\"Vui lòng nhập đầy đủ thông tin.\");\r\n      }\r\n      console.log(\"Đang gửi request register:\", { username, email, phone });\r\n      const response = await axios.post(\"http://localhost:5000/api/users/register\", {\r\n        username,\r\n        email,\r\n        phone,\r\n        password,\r\n      });\r\n      console.log(\"Response từ register:\", response.data);\r\n      const { token } = response.data;\r\n      if (!token) throw new Error(\"Không nhận được token từ server\");\r\n      localStorage.setItem(\"token\", token);\r\n      localStorage.removeItem(\"tempUserId\"); // Xóa tempUserId khi đăng ký thật\r\n      const userResponse = await axios.get(\"http://localhost:5000/api/users/me\"); // Không cần token\r\n      console.log(\"User data sau register:\", userResponse.data);\r\n      setUser({ ...userResponse.data, token });\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.message || \"Đăng ký thất bại\";\r\n      console.error(\"Lỗi register:\", errorMessage);\r\n      throw new Error(errorMessage);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    console.log(\"Đăng xuất, xóa token và user\");\r\n    localStorage.removeItem(\"token\");\r\n    const guestId = `guest-${Math.random().toString(36).substr(2, 9)}`;\r\n    localStorage.setItem(\"tempUserId\", guestId);\r\n    setUser({ _id: guestId });\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, loading, login, register, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}