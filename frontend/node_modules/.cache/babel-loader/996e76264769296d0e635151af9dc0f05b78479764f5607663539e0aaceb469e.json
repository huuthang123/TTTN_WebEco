{"ast":null,"code":"// services/AddressService.js\nimport axios from 'axios';\nimport { useAuth } from '../context/AuthContext'; // Giả định bạn sẽ dùng trong các component\n\nconst API_URL = 'http://localhost:5000/api/addresses';\nconst AddressService = {\n  getAddresses: async token => {\n    try {\n      if (!token) throw new Error('Token không tồn tại. Vui lòng đăng nhập lại.');\n      const response = await axios.get(API_URL, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response;\n      console.error('Lỗi khi lấy danh sách địa chỉ:', error);\n      throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error;\n    }\n  },\n  addAddress: async (address, token) => {\n    try {\n      if (!token) throw new Error('Token không tồn tại. Vui lòng đăng nhập lại.');\n      const response = await axios.post(API_URL, address, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response2;\n      console.error('Lỗi khi thêm địa chỉ:', error);\n      throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error;\n    }\n  },\n  updateAddress: async (id, updatedAddress, token) => {\n    try {\n      if (!token) throw new Error('Token không tồn tại. Vui lòng đăng nhập lại.');\n      const response = await axios.put(`${API_URL}/${id}`, updatedAddress, {\n        // Sửa POST thành PUT\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response3;\n      console.error('Lỗi khi cập nhật địa chỉ:', error);\n      throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error;\n    }\n  },\n  deleteAddress: async (id, token) => {\n    try {\n      if (!token) throw new Error('Token không tồn tại. Vui lòng đăng nhập lại.');\n      await axios.delete(`${API_URL}/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const updatedAddresses = await AddressService.getAddresses(token);\n      return updatedAddresses;\n    } catch (error) {\n      var _error$response4;\n      console.error('Lỗi khi xóa địa chỉ:', error);\n      throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error;\n    }\n  },\n  getDefaultAddress: async token => {\n    try {\n      const addresses = await AddressService.getAddresses(token);\n      return addresses.length > 0 ? addresses[0] : null;\n    } catch (error) {\n      console.error('Lỗi khi lấy địa chỉ mặc định:', error);\n      return null;\n    }\n  }\n};\nexport default AddressService;","map":{"version":3,"names":["axios","useAuth","API_URL","AddressService","getAddresses","token","Error","response","get","headers","Authorization","data","error","_error$response","console","addAddress","address","post","_error$response2","updateAddress","id","updatedAddress","put","_error$response3","deleteAddress","delete","updatedAddresses","_error$response4","getDefaultAddress","addresses","length"],"sources":["D:/Năm 4 Kì 2/Phát triển hệ thống thương mại điện tử/ecommerce-app/frontend/src/services/AddressService.js"],"sourcesContent":["// services/AddressService.js\r\nimport axios from 'axios';\r\nimport { useAuth } from '../context/AuthContext'; // Giả định bạn sẽ dùng trong các component\r\n\r\nconst API_URL = 'http://localhost:5000/api/addresses';\r\n\r\nconst AddressService = {\r\n  getAddresses: async (token) => {\r\n    try {\r\n      if (!token) throw new Error('Token không tồn tại. Vui lòng đăng nhập lại.');\r\n      const response = await axios.get(API_URL, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Lỗi khi lấy danh sách địa chỉ:', error);\r\n      throw error.response?.data || error;\r\n    }\r\n  },\r\n\r\n  addAddress: async (address, token) => {\r\n    try {\r\n      if (!token) throw new Error('Token không tồn tại. Vui lòng đăng nhập lại.');\r\n      const response = await axios.post(API_URL, address, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Lỗi khi thêm địa chỉ:', error);\r\n      throw error.response?.data || error;\r\n    }\r\n  },\r\n\r\n  updateAddress: async (id, updatedAddress, token) => {\r\n    try {\r\n      if (!token) throw new Error('Token không tồn tại. Vui lòng đăng nhập lại.');\r\n      const response = await axios.put(`${API_URL}/${id}`, updatedAddress, { // Sửa POST thành PUT\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Lỗi khi cập nhật địa chỉ:', error);\r\n      throw error.response?.data || error;\r\n    }\r\n  },\r\n\r\n  deleteAddress: async (id, token) => {\r\n    try {\r\n      if (!token) throw new Error('Token không tồn tại. Vui lòng đăng nhập lại.');\r\n      await axios.delete(`${API_URL}/${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      const updatedAddresses = await AddressService.getAddresses(token);\r\n      return updatedAddresses;\r\n    } catch (error) {\r\n      console.error('Lỗi khi xóa địa chỉ:', error);\r\n      throw error.response?.data || error;\r\n    }\r\n  },\r\n\r\n  getDefaultAddress: async (token) => {\r\n    try {\r\n      const addresses = await AddressService.getAddresses(token);\r\n      return addresses.length > 0 ? addresses[0] : null;\r\n    } catch (error) {\r\n      console.error('Lỗi khi lấy địa chỉ mặc định:', error);\r\n      return null;\r\n    }\r\n  },\r\n};\r\n\r\nexport default AddressService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}