{"ast":null,"code":"// src/services/CartService.js\n\nconst BASE_URL = 'http://localhost:5000/api/carts';\n\n// Lấy giỏ hàng theo userId\nexport async function fetchCart(userId) {\n  try {\n    if (!userId) throw new Error('Thiếu userId');\n    console.log('Fetching cart for userId:', userId); // Debug\n    const response = await fetch(`${BASE_URL}/${userId}`);\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Lỗi khi lấy giỏ hàng');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching cart:', error);\n    throw error; // Ném lỗi để xử lý ở nơi gọi\n  }\n}\n\n// Thêm sản phẩm vào giỏ hàng\nexport async function addToCart(userId, product) {\n  try {\n    if (!userId) throw new Error('Thiếu userId');\n    const {\n      productId,\n      quantity = 1,\n      size\n    } = product;\n    console.log('Adding to cart:', {\n      userId,\n      productId,\n      quantity,\n      size\n    }); // Debug\n    const response = await fetch(`${BASE_URL}/add`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userId,\n        productId,\n        quantity,\n        size\n      })\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Lỗi khi thêm vào giỏ hàng');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error adding to cart:', error);\n    throw error;\n  }\n}\n\n// Tăng số lượng sản phẩm\nexport async function increaseQuantity(userId, productId, size) {\n  try {\n    if (!userId) throw new Error('Thiếu userId');\n    console.log('Increasing quantity:', {\n      userId,\n      productId,\n      size\n    }); // Debug\n    const response = await fetch(`${BASE_URL}/increase`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userId,\n        productId,\n        size\n      })\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Lỗi khi tăng số lượng');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error increasing quantity:', error);\n    throw error;\n  }\n}\n\n// Giảm số lượng sản phẩm\nexport async function decreaseQuantity(userId, productId, size) {\n  try {\n    if (!userId) throw new Error('Thiếu userId');\n    console.log('Decreasing quantity:', {\n      userId,\n      productId,\n      size\n    }); // Debug\n    const response = await fetch(`${BASE_URL}/decrease`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userId,\n        productId,\n        size\n      })\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Lỗi khi giảm số lượng');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error decreasing quantity:', error);\n    throw error;\n  }\n}\n\n// Xóa sản phẩm khỏi giỏ hàng\nexport async function removeFromCart(userId, productId, size) {\n  try {\n    if (!userId) throw new Error('Thiếu userId');\n    console.log('Removing from cart:', {\n      userId,\n      productId,\n      size\n    }); // Debug\n    const response = await fetch(`${BASE_URL}/remove`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userId,\n        productId,\n        size\n      })\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Lỗi khi xóa sản phẩm');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error removing from cart:', error);\n    throw error;\n  }\n}","map":{"version":3,"names":["BASE_URL","fetchCart","userId","Error","console","log","response","fetch","ok","errorData","json","message","error","addToCart","product","productId","quantity","size","method","headers","body","JSON","stringify","increaseQuantity","decreaseQuantity","removeFromCart"],"sources":["D:/Năm 4 Kì 2/Phát triển hệ thống thương mại điện tử/ecommerce-app/frontend/src/services/CartService.js"],"sourcesContent":["// src/services/CartService.js\r\n\r\nconst BASE_URL = 'http://localhost:5000/api/carts';\r\n\r\n// Lấy giỏ hàng theo userId\r\nexport async function fetchCart(userId) {\r\n    try {\r\n        if (!userId) throw new Error('Thiếu userId');\r\n        console.log('Fetching cart for userId:', userId); // Debug\r\n        const response = await fetch(`${BASE_URL}/${userId}`);\r\n        if (!response.ok) {\r\n            const errorData = await response.json();\r\n            throw new Error(errorData.message || 'Lỗi khi lấy giỏ hàng');\r\n        }\r\n        return await response.json();\r\n    } catch (error) {\r\n        console.error('Error fetching cart:', error);\r\n        throw error; // Ném lỗi để xử lý ở nơi gọi\r\n    }\r\n}\r\n\r\n// Thêm sản phẩm vào giỏ hàng\r\nexport async function addToCart(userId, product) {\r\n    try {\r\n        if (!userId) throw new Error('Thiếu userId');\r\n        const { productId, quantity = 1, size } = product;\r\n        console.log('Adding to cart:', { userId, productId, quantity, size }); // Debug\r\n        const response = await fetch(`${BASE_URL}/add`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ userId, productId, quantity, size })\r\n        });\r\n        if (!response.ok) {\r\n            const errorData = await response.json();\r\n            throw new Error(errorData.message || 'Lỗi khi thêm vào giỏ hàng');\r\n        }\r\n        return await response.json();\r\n    } catch (error) {\r\n        console.error('Error adding to cart:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\n// Tăng số lượng sản phẩm\r\nexport async function increaseQuantity(userId, productId, size) {\r\n    try {\r\n        if (!userId) throw new Error('Thiếu userId');\r\n        console.log('Increasing quantity:', { userId, productId, size }); // Debug\r\n        const response = await fetch(`${BASE_URL}/increase`, {\r\n            method: 'PUT',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ userId, productId, size })\r\n        });\r\n        if (!response.ok) {\r\n            const errorData = await response.json();\r\n            throw new Error(errorData.message || 'Lỗi khi tăng số lượng');\r\n        }\r\n        return await response.json();\r\n    } catch (error) {\r\n        console.error('Error increasing quantity:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\n// Giảm số lượng sản phẩm\r\nexport async function decreaseQuantity(userId, productId, size) {\r\n    try {\r\n        if (!userId) throw new Error('Thiếu userId');\r\n        console.log('Decreasing quantity:', { userId, productId, size }); // Debug\r\n        const response = await fetch(`${BASE_URL}/decrease`, {\r\n            method: 'PUT',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ userId, productId, size })\r\n        });\r\n        if (!response.ok) {\r\n            const errorData = await response.json();\r\n            throw new Error(errorData.message || 'Lỗi khi giảm số lượng');\r\n        }\r\n        return await response.json();\r\n    } catch (error) {\r\n        console.error('Error decreasing quantity:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\n// Xóa sản phẩm khỏi giỏ hàng\r\nexport async function removeFromCart(userId, productId, size) {\r\n    try {\r\n        if (!userId) throw new Error('Thiếu userId');\r\n        console.log('Removing from cart:', { userId, productId, size }); // Debug\r\n        const response = await fetch(`${BASE_URL}/remove`, {\r\n            method: 'DELETE',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ userId, productId, size })\r\n        });\r\n        if (!response.ok) {\r\n            const errorData = await response.json();\r\n            throw new Error(errorData.message || 'Lỗi khi xóa sản phẩm');\r\n        }\r\n        return await response.json();\r\n    } catch (error) {\r\n        console.error('Error removing from cart:', error);\r\n        throw error;\r\n    }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}