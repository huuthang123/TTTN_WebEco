{"ast":null,"code":"import React,{createContext,useState,useContext,useEffect}from'react';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{const token=localStorage.getItem('token');console.log('Token from localStorage:',token);if(token){axios.get('http://localhost:5000/api/users/me',{headers:{Authorization:`Bearer ${token}`}}).then(response=>{console.log('User data from /me:',response.data);setUser(response.data);setLoading(false);}).catch(error=>{var _error$response;console.error('Lỗi khi lấy thông tin user:',((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||error.message);localStorage.removeItem('token');setUser(null);setLoading(false);});}else{console.log('Không có token, bỏ qua gọi API /me');setLoading(false);}},[]);const login=async(email,password)=>{try{if(!email||!password){throw new Error('Vui lòng nhập email và mật khẩu.');}console.log('Đang gửi request login:',{email});const response=await axios.post('http://localhost:5000/api/users/login',{email,password});console.log('Response từ login:',response.data);const{token}=response.data;// Lấy token từ response\nif(!token)throw new Error('Không nhận được token từ server');localStorage.setItem('token',token);const userResponse=await axios.get('http://localhost:5000/api/users/me',{headers:{Authorization:`Bearer ${token}`}});console.log('User data sau login:',userResponse.data);setUser(userResponse.data);}catch(error){var _error$response2,_error$response2$data;const errorMessage=((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||'Email hoặc mật khẩu không đúng';console.error('Lỗi login:',errorMessage);throw new Error(errorMessage);}};const register=async(username,email,phone,password)=>{try{if(!username||!email||!phone||!password){throw new Error('Vui lòng nhập đầy đủ thông tin.');}console.log('Đang gửi request register:',{username,email,phone});const response=await axios.post('http://localhost:5000/api/users/register',{username,email,phone,password});console.log('Response từ register:',response.data);const{token}=response.data;// Lấy token từ response\nif(!token)throw new Error('Không nhận được token từ server');localStorage.setItem('token',token);const userResponse=await axios.get('http://localhost:5000/api/users/me',{headers:{Authorization:`Bearer ${token}`}});console.log('User data sau register:',userResponse.data);setUser(userResponse.data);}catch(error){var _error$response3,_error$response3$data;const errorMessage=((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.message)||'Đăng ký thất bại';console.error('Lỗi register:',errorMessage);throw new Error(errorMessage);}};const logout=()=>{console.log('Đăng xuất, xóa token và user');localStorage.removeItem('token');setUser(null);};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,loading,login,register,logout},children:children});};export const useAuth=()=>useContext(AuthContext);","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","loading","setLoading","token","localStorage","getItem","console","log","get","headers","Authorization","then","response","data","catch","error","_error$response","message","removeItem","login","email","password","Error","post","setItem","userResponse","_error$response2","_error$response2$data","errorMessage","register","username","phone","_error$response3","_error$response3$data","logout","Provider","value","useAuth"],"sources":["D:/Năm 4 Kì 2/Phát triển hệ thống thương mại điện tử/ecommerce-app/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        console.log('Token from localStorage:', token);\r\n        if (token) {\r\n            axios\r\n                .get('http://localhost:5000/api/users/me', {\r\n                    headers: { Authorization: `Bearer ${token}` },\r\n                })\r\n                .then((response) => {\r\n                    console.log('User data from /me:', response.data);\r\n                    setUser(response.data);\r\n                    setLoading(false);\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Lỗi khi lấy thông tin user:', error.response?.data || error.message);\r\n                    localStorage.removeItem('token');\r\n                    setUser(null);\r\n                    setLoading(false);\r\n                });\r\n        } else {\r\n            console.log('Không có token, bỏ qua gọi API /me');\r\n            setLoading(false);\r\n        }\r\n    }, []);\r\n\r\n    const login = async (email, password) => {\r\n        try {\r\n            if (!email || !password) {\r\n                throw new Error('Vui lòng nhập email và mật khẩu.');\r\n            }\r\n            console.log('Đang gửi request login:', { email });\r\n            const response = await axios.post('http://localhost:5000/api/users/login', {\r\n                email,\r\n                password,\r\n            });\r\n            console.log('Response từ login:', response.data);\r\n            const { token } = response.data; // Lấy token từ response\r\n            if (!token) throw new Error('Không nhận được token từ server');\r\n            localStorage.setItem('token', token);\r\n            const userResponse = await axios.get('http://localhost:5000/api/users/me', {\r\n                headers: { Authorization: `Bearer ${token}` },\r\n            });\r\n            console.log('User data sau login:', userResponse.data);\r\n            setUser(userResponse.data);\r\n        } catch (error) {\r\n            const errorMessage = error.response?.data?.message || 'Email hoặc mật khẩu không đúng';\r\n            console.error('Lỗi login:', errorMessage);\r\n            throw new Error(errorMessage);\r\n        }\r\n    };\r\n\r\n    const register = async (username, email, phone, password) => {\r\n        try {\r\n            if (!username || !email || !phone || !password) {\r\n                throw new Error('Vui lòng nhập đầy đủ thông tin.');\r\n            }\r\n            console.log('Đang gửi request register:', { username, email, phone });\r\n            const response = await axios.post('http://localhost:5000/api/users/register', {\r\n                username,\r\n                email,\r\n                phone,\r\n                password,\r\n            });\r\n            console.log('Response từ register:', response.data);\r\n            const { token } = response.data; // Lấy token từ response\r\n            if (!token) throw new Error('Không nhận được token từ server');\r\n            localStorage.setItem('token', token);\r\n            const userResponse = await axios.get('http://localhost:5000/api/users/me', {\r\n                headers: { Authorization: `Bearer ${token}` },\r\n            });\r\n            console.log('User data sau register:', userResponse.data);\r\n            setUser(userResponse.data);\r\n        } catch (error) {\r\n            const errorMessage = error.response?.data?.message || 'Đăng ký thất bại';\r\n            console.error('Lỗi register:', errorMessage);\r\n            throw new Error(errorMessage);\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        console.log('Đăng xuất, xóa token và user');\r\n        localStorage.removeItem('token');\r\n        setUser(null);\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user, loading, login, register, logout }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}